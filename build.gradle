plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'io.github.juuxel.loom-quiltflower' version '1.7.1' apply false
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.+"
}

architectury {
    minecraft = minecraft_version
}

static def listGameVersions(String string1, String string2) {
    // Extract the base version and the starting and ending patch numbers
    String baseVersion = string1
    int startPatch = 0
    int endPatch = Integer.parseInt(string2.split('\\.')[2])

    // Initialize an array to hold the generated versions
    def versions = []

    // Add the base version (string1) to the array
    versions << baseVersion

    // Generate and add the patch versions
    for (int i = startPatch + 1; i <= endPatch; i++) {
        versions << "${baseVersion}.${i}"
    }

    // Return the generated versions
    return versions
}


subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.juuxel.loom-quiltflower"
    apply plugin: "com.matthewprenger.cursegradle"
    apply plugin: "com.modrinth.minotaur"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.minecraft:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            it.officialMojangMappings {
                setNameSyntheticMembers(false)
            }
            it.parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}")
        }

    }

    var env = System.getenv()
    var modLoader = name

    var changelogFile = rootProject.file("changelog.md")
    var changelogText = changelogFile.exists() ? changelogFile.text : ""

    var versions = listGameVersions(minecraft_min_version, minecraft_version)

    if (env.MODRINTH_TOKEN) {
        modrinth {
            projectId = modrinth_id
            uploadFile = tasks.remapJar
            gameVersions = versions
            if (modLoader == "forge") {
                loaders = ["neoforge"]
            } else loaders = [modLoader]

            changelog = changelogText
            versionNumber = modLoader +"_"+ mod_version
            versionType = release_type

            if (modLoader == "fabric") {
                dependencies {
                    required.project "fabric-api"
                    required.project "moonlight"
                }
            } else {
                dependencies {
                    required.project "moonlight"
                }
            }
        }
    }

    if (env.CURSEFORGE_TOKEN) {
        curseforge {
            apiKey = env.CURSEFORGE_TOKEN
            project {
                id = project_id
                changelog = changelogText
                releaseType = release_type
                for (var ver : versions){
                    addGameVersion ver
                }
                if (modLoader == "neoforge") {
                    addGameVersion("NeoForge")
                } else addGameVersion modLoader.capitalize()

                mainArtifact(tasks.remapJar)

                if (modLoader == "fabric") {
                    relations {
                        requiredDependency "fabric-api"
                        requiredDependency "selene"
                        optionalDependency("another-furniture")
                        optionalDependency("architects-palette-fabric")
                        optionalDependency("backpacked")
                        optionalDependency("building-but-better")
                        optionalDependency("camp-chair")
                        optionalDependency("chipped")
                        optionalDependency("clutter")
                        optionalDependency("create-fabric")
                        optionalDependency("decorative-blocks")
                        optionalDependency("dramatic-doors")
                        optionalDependency("exlines-awnings")
                        optionalDependency("exlines-bark-carpets")
                        optionalDependency("farmers-delight-fabric")
                        optionalDependency("farmers-delight-refabricated")
                        optionalDependency("friends-and-foes")
                        optionalDependency("furnish")
                        optionalDependency("handcrafted")
                        optionalDependency("hearth-and-home")
                        optionalDependency("infinitybuttons")
                        optionalDependency("lightmans-currency-fabric")
                        optionalDependency("macaws-bridges")
                        optionalDependency("macaws-doors")
                        optionalDependency("macaws-fences-and-walls")
                        optionalDependency("macaws-furniture")
                        optionalDependency("macaws-lights-and-lamps")
                        optionalDependency("macaws-paths-and-pavings")
                        optionalDependency("macaws-roofs")
                        optionalDependency("macaws-trapdoors")
                        optionalDependency("macaws-windows")
                        optionalDependency("mighty-mail-fabric")
                        optionalDependency("missing-wilds")
                        optionalDependency("more-crafting-tables-lieonlion")
                        optionalDependency("quark")
                        optionalDependency("regions-unexplored")
//                        optionalDependency("the-twilight-forest") //NOT AVAILABLE
                        optionalDependency("table-top-craft-fabric")
                        optionalDependency("twigs")
                        optionalDependency("valhelsia-furniture")
                        optionalDependency("variant-vanilla-blocks")
                        optionalDependency("villagersplus-fabric")
                        optionalDependency("wooden-hoppers")
                    }
                } else {
                    relations {
                        requiredDependency("selene")
                        optionalDependency("sawmill")
                        optionalDependency("absent-by-design")
                        optionalDependency("another-furniture")
                        optionalDependency("architects-palette")
                        optionalDependency("backpacked")
                        optionalDependency("boatload")
                        optionalDependency("buildersaddition")
                        optionalDependency("building-but-better")
                        optionalDependency("camp-chair")
                        optionalDependency("chipped")
                        optionalDependency("corail-pillar")
                        optionalDependency("create")
                        optionalDependency("dawn-of-time")
                        optionalDependency("decorative-blocks")
                        optionalDependency("decoration-delight")
                        optionalDependency("domum-ornamentum")
                        optionalDependency("dramatic-doors")
                        optionalDependency("exlines-bark-carpets")
                        optionalDependency("farmers-delight")
                        optionalDependency("friends-and-foes-forge")
                        optionalDependency("functional-storage")
                        optionalDependency("furnish")
                        optionalDependency("handcrafted")
                        optionalDependency("hearth-and-home")
                        optionalDependency("infinitybuttons")
                        optionalDependency("just-a-raft-mod")
                        optionalDependency("lightmans-currency")
                        optionalDependency("macaws-bridges")
                        optionalDependency("macaws-doors")
                        optionalDependency("macaws-fences-and-walls")
                        optionalDependency("macaws-furniture")
                        optionalDependency("macaws-lights-and-lamps")
                        optionalDependency("macaws-paths-and-pavings")
                        optionalDependency("macaws-roofs")
                        optionalDependency("macaws-trapdoors")
                        optionalDependency("macaws-windows")
                        optionalDependency("mighty-mail")
                        optionalDependency("missing-wilds-forge")
                        optionalDependency("more-chest-variants-lieonlion")
                        optionalDependency("more-crafting-tables-for-forge")
                        optionalDependency("more-crafting-tables-lieonlion")
                        optionalDependency("mosaic-carpentry")
                        optionalDependency("mrcrayfish-furniture-mod")
                        optionalDependency("pokecube-aoi")
                        optionalDependency("premium-wood")
//                        optionalDependency("productivebees")
                        optionalDependency("quark")
                        optionalDependency("redeco")
                        optionalDependency("regions-unexplored")
                        optionalDependency("storage-drawers")
                        optionalDependency("timber-frames")
                        optionalDependency("the-graveyard-forge")
                        optionalDependency("the-twilight-forest")
                        optionalDependency("table-top-craft")
                        optionalDependency("tropicraft")
                        optionalDependency("twigs")
                        optionalDependency("valhelsia-furniture")
                        optionalDependency("variant-crafting-tables")
                        optionalDependency("variant-vanilla-blocks")
                        optionalDependency("villagersplus-forge")
                        optionalDependency("woodster")
                        optionalDependency("woodworks")
                        optionalDependency("workshop-for-handsome-adventurer")
                        optionalDependency("xercamod")
                    }
                }
            }
        }
    }

}

allprojects {

    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = mod_id
    version = mod_version
    group = mod_group_id

    repositories {

        flatDir {
            dirs 'mods'
        }

        mavenCentral()
        mavenLocal()

        maven { url "https://maven.parchmentmc.org" }

        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }

        maven { url = "https://maven.teamresourceful.com/repository/maven-public/" } // Chipped

        maven {
            url "https://maven.firstdarkdev.xyz/snapshots"
        }
//        maven { url 'https://mvn.devos.one/releases/' } // fabricators_of_create

        maven { url = "https://mvn.devos.one/snapshots/" } // registrate_fabric & registrate

        maven {
            name = "TerraformersMC"
            url = "https://maven.terraformersmc.com/"
        }
        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }
        maven {
            url = 'https://maven.neoforged.net'
        }

        maven {
            url = "https://api.modrinth.com/maven"
        }

        maven {
            url = "https://maven.blamejared.com/"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = rootProject.java_version.toInteger()
    }

    java {
        withSourcesJar()
    }
}

ext {
    usesMavenLocalML =  System.getenv().MY_PC == "1"
    print "isMyPc: $usesMavenLocalML"
    replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_min_version  : minecraft_min_version,
            minecraft_max_version  : minecraft_max_version,
            pack_format_number     : pack_format_number,

            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_version            : mod_version,
            mod_license            : mod_license,
            mod_authors            : mod_authors,
            mod_description        : mod_description,
            mod_credits            : mod_credits,
            mod_homepage           : mod_homepage,
            mod_github             : mod_github,

            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range
    ]
}


task buildAndPublishAll {
    dependsOn ':clean'
    dependsOn ':build'
    dependsOn ':neoforge:curseforge'
    dependsOn ':neoforge:modrinth'
    dependsOn ':fabric:curseforge'
    dependsOn ':fabric:modrinth'
}

buildAndPublishAll.group = 'build'
buildAndPublishAll.description = 'Runs clean, build, and publish forge and fabric'

task buildAndPublishAllM {
    dependsOn buildAndPublishAll
    dependsOn ':publishToMavenLocal'
}

buildAndPublishAllM.group = 'build'
buildAndPublishAllM.description = 'Runs clean, build, publish forge and fabric and uploads to maven local'

